dependencies {
    compile project(':httpservices')
    compile project(':cdm')
    compile project(':grib')
    compile project(':tdcommon')

    compile libraries["httpclient"]
    compile libraries["jdom2"]
    compile libraries["spring-core"]
    compile libraries["spring-context"]

    compile libraries["slf4j-api"]
    runtime libraries["log4j-slf4j-impl"]
    runtime libraries["log4j-core"]
}

apply plugin: 'shadow'
import com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer

shadow {
    outputFile = file("${destinationDir}/tdms-${version}.jar")
    stats = true

    exclude 'com/sleepycat/**'
    exclude 'net/sf/**'
    exclude 'org/quartz/**'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/*.txt'
    exclude 'META-INF/*.xml'

    artifactSet {
        exclude 'commons-logging:commons-logging:*'
    }

    jar {
        manifest {
            attributes 'Main-Class': 'thredds.tdm.TdmRunner'
        }
    }

    transformer(AppendingTransformer) {
        resource = 'META-INF/spring.handlers'
    }
    transformer(AppendingTransformer) {
        resource = 'META-INF/spring.schemas'
    }
}

task showClasspath << {
    buildscript.configurations.classpath.each { println it }
}

task showMeCache << {
    configurations.compile.each { println it }
}
